services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db_dev
    environment:
      POSTGRES_DB: assignment-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: assignment_dev
    environment:
      - APP_ENV=development
      - APP_DEBUG=true
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=assignment-db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - LOG_LEVEL=debug
      - LOG_FORMAT=text
      - LOG_OUTPUT=stdout
      - CORS_ENABLED=true
      - CORS_ALLOWED_ORIGINS=*
    ports:
      - "8080:8080"
    volumes:
      # Hot reload for development
      - .:/app
      - /app/tmp
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    # Enable debugging
    stdin_open: true
    tty: true
    
volumes:
  postgres_dev_data:

networks:
  app-network:
    driver: bridge